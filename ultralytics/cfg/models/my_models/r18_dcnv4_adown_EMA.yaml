
# Parameters
nc: 10 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, ConvNormLayer, [32, 3, 2, 1, 'relu']] # 0-P1
  - [-1, 1, ConvNormLayer, [32, 3, 1, 1, 'relu']] # 1
  - [-1, 1, ConvNormLayer, [64, 3, 1, 1, 'relu']] # 2
  - [-1, 1, nn.MaxPool2d, [3, 2, 1]] # 3-P2

  - [-1, 2, Blocks, [64,  BottleNeck_Dcnv4,  2, False]] # 4
  - [-1, 2, Blocks, [128, BottleNeck_Dcnv4, 3, False]] # 5-P3
  - [ -1, 2, Blocks, [ 256,BottleNeck , 4, False ] ] # 6-P4
  - [ -1, 2, Blocks, [ 512, BottleNeck, 5, False ] ] # 7-P5

head:
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 8 input_proj.2  [1, 256, 20, 20]
  - [-1, 1, AIFI, [1024, 8]] # 9  [1, 256, 20, 20]
  - [-1, 1, Conv, [256, 1, 1]]  # 10, Y5, lateral_convs.0  [1, 256, 20, 20]

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 11  [1, 256, 40, 40]
  - [6, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 12 input_proj.1  [1, 256, 40, 40]
  - [-1, 1, EMA, [256]]  # 13 EMA  [1, 256, 40, 40]
  - [[-3, -1], 1, Concat, [1]] # 14  [1, 512, 40, 40]
  - [-1, 3, RepNCSPELAN4_high, [256]]  # 15, fpn_blocks.0  [1, 256, 40, 40]
  - [-1, 1, Conv, [256, 1, 1]]   # 16, Y4, lateral_convs.1  [1, 256, 40, 40]

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 17  [1, 256, 80, 80]
  - [5, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 18 input_proj.0  [1, 256, 80, 80]
  - [-1, 1, EMA, [256]]  # 19 EMA
  - [[-3, -1], 1, Concat, [1]]  # 20 cat backbone P4  [1, 512, 80, 80]
  - [-1, 3, RepNCSPELAN4_high, [256]]    # X3 (21), fpn_blocks.1  [1, 256, 80, 80]

  - [-1, 1, Conv, [256, 3, 2]]   # 22, downsample_convs.0  [1, 256, 40, 40]
  - [-1, 1, EMA, [256]] # 23
  - [[-1, 16], 1, Concat, [1]]  # 24 cat Y4  [1, 512, 40, 40]
  - [-1, 3, RepNCSPELAN4_high, [256]]    # F4 (25), pan_blocks.0  [1, 256, 40, 40]

  - [-1, 1, Conv, [256, 3, 2]]   # 26, downsample_convs.1  [1, 256, 20, 20]
  - [-1, 1, EMA, [256]] # 27
  - [[-1, 10], 1, Concat, [1]]  # 28 cat Y5  [1, 512, 20, 20]
  - [-1, 3, RepNCSPELAN4_high, [512]]    # F5 (29), pan_blocks.1  [1, 256, 20, 20]

  - [[21, 25, 29], 1, RTDETRDecoder, [nc, 256, 300, 4, 8, 3]]  # Detect(P3, P4, P5)